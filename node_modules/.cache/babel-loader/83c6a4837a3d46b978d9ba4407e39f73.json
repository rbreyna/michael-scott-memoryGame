{"ast":null,"code":"var _jsxFileName = \"/Users/rbreyna/Desktop/HW Assignments/clicky-game/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"./components/Navbar\";\nimport Cards from \"./components/Cards\";\nimport characters from \"./memory-cards.json\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: characters,\n      topScore: 0,\n      currentScore: 0\n    };\n\n    this.shuffleArray = arr => {\n      var counter = arr.length;\n      var random;\n      var temp; // While there are elements in the array\n\n      while (counter > 0) {\n        // Pick a random index\n        random = Math.floor(Math.random() * counter); // Decrease ctr by 1\n\n        counter--; // And swap the last element with it\n\n        temp = arr[counter];\n        arr[counter] = arr[random];\n        arr[random] = temp;\n      }\n\n      return arr;\n    };\n\n    this.handleOnClick = id => {\n      console.log(\"You've clicked!\");\n      console.log(id); //Makes copy of characters\n\n      let characterCopy = this.state.characters.slice();\n      charactersCopy[id - 1].clicked = true;\n      this.setState({\n        characters: characterCopy\n      });\n\n      if (!characters[id - 1].clicked) {\n        this.setState({\n          currentScore: this.state.currentScore + 1\n        });\n      } else {\n        console.log(\"You've already choosen \" + characters[id].name + \"!\");\n      }\n\n      console.log(this.state.currentScore);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      className: \"bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      currentScore: this.state.currentScore,\n      topScore: this.state.topScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container col-xl-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.shuffleArray(this.state.characters).map(persona => /*#__PURE__*/React.createElement(Cards, {\n      key: persona.id,\n      id: persona.id,\n      clicked: persona.clicked,\n      image: persona.image,\n      clickHandler: this.handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rbreyna/Desktop/HW Assignments/clicky-game/clicky-game/src/App.js"],"names":["React","Component","Wrapper","Col","Nav","Cards","characters","App","state","topScore","currentScore","shuffleArray","arr","counter","length","random","temp","Math","floor","handleOnClick","id","console","log","characterCopy","slice","charactersCopy","clicked","setState","name","render","map","persona","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\"\nimport Col from \"react-bootstrap/Col\"\nimport Nav from \"./components/Navbar\"\nimport Cards from \"./components/Cards\"\nimport characters from \"./memory-cards.json\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n\n    state = {\n        characters: characters,\n        topScore: 0,\n        currentScore: 0,\n    };\n\n    shuffleArray = arr => {\n\n        var counter = arr.length\n        var random;\n        var temp;\n\n        // While there are elements in the array\n        while (counter > 0) {\n            // Pick a random index\n            random = Math.floor(Math.random() * counter);\n            // Decrease ctr by 1\n            counter--;\n            // And swap the last element with it\n            temp = arr[counter];\n            arr[counter] = arr[random];\n            arr[random] = temp;\n        }\n        return arr;\n    }\n\n    handleOnClick = (id)=>{\n        console.log(\"You've clicked!\")\n        console.log(id);\n\n        //Makes copy of characters\n        let characterCopy = this.state.characters.slice();\n        charactersCopy[id-1].clicked = true;\n        this.setState({characters: characterCopy});\n\n        if(!characters[id-1].clicked){\n            this.setState({currentScore: this.state.currentScore + 1})\n        } else {\n            console.log(\"You've already choosen \" + characters[id].name + \"!\")\n        }\n        \n        console.log(this.state.currentScore)\n    }\n\n    render() {\n\n\n        return (\n            <Wrapper className=\"bg-dark\">\n                <Nav currentScore={this.state.currentScore} topScore = {this.state.topScore}/>\n                <div className=\"container col-xl-6\" >\n                    <Col >\n                        {this.shuffleArray(this.state.characters).map(persona =>\n                            <Cards key={persona.id} id = {persona.id} clicked ={persona.clicked} image={persona.image} clickHandler ={this.handleOnClick}></Cards>)}\n                    </Col>\n                </div>\n            </Wrapper >\n        )\n    }\n}\n    export default App;"]},"metadata":{},"sourceType":"module"}