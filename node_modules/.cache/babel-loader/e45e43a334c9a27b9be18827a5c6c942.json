{"ast":null,"code":"var _jsxFileName = \"/Users/rbreyna/Desktop/HW Assignments/clicky-game/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"./components/Navbar\";\nimport Cards from \"./components/Cards\";\nimport characters from \"./memory-cards.json\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters,\n      topScore: 0,\n      currentScore: 0\n    };\n\n    this.shuffleArray = arr => {\n      var counter = arr.length;\n      var random;\n      var temp; // While there are elements in the array\n\n      while (counter > 0) {\n        // Pick a random index\n        random = Math.floor(Math.random() * counter); // Decrease ctr by 1\n\n        counter--; // And swap the last element with it\n\n        temp = arr[counter];\n        arr[counter] = arr[random];\n        arr[random] = temp;\n      }\n\n      return arr;\n    };\n\n    this.handleOnClick = () => {\n      this.setState({\n        currentScore: this.currentScore + 1\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      className: \"bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container col-xl-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, this.shuffleArray(this.state.characters).map(persona => /*#__PURE__*/React.createElement(Cards, {\n      id: persona.id,\n      image: persona.image,\n      onClick: this.handleOnClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rbreyna/Desktop/HW Assignments/clicky-game/clicky-game/src/App.js"],"names":["React","Component","Wrapper","Col","Nav","Cards","characters","App","state","topScore","currentScore","shuffleArray","arr","counter","length","random","temp","Math","floor","handleOnClick","setState","render","map","persona","id","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,sCAAP;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBO,KAFwB,GAEhB;AACJF,MAAAA,UADI;AAEJG,MAAAA,QAAQ,EAAE,CAFN;AAGJC,MAAAA,YAAY,EAAE;AAHV,KAFgB;;AAAA,SAQxBC,YARwB,GAQTC,GAAG,IAAI;AAElB,UAAIC,OAAO,GAAGD,GAAG,CAACE,MAAlB;AACA,UAAIC,MAAJ;AACA,UAAIC,IAAJ,CAJkB,CAMlB;;AACA,aAAOH,OAAO,GAAG,CAAjB,EAAoB;AAChB;AACAE,QAAAA,MAAM,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACF,MAAL,KAAgBF,OAA3B,CAAT,CAFgB,CAGhB;;AACAA,QAAAA,OAAO,GAJS,CAKhB;;AACAG,QAAAA,IAAI,GAAGJ,GAAG,CAACC,OAAD,CAAV;AACAD,QAAAA,GAAG,CAACC,OAAD,CAAH,GAAeD,GAAG,CAACG,MAAD,CAAlB;AACAH,QAAAA,GAAG,CAACG,MAAD,CAAH,GAAcC,IAAd;AACH;;AACD,aAAOJ,GAAP;AACH,KA1BuB;;AAAA,SA4BxBO,aA5BwB,GA4BR,MAAI;AAChB,WAAKC,QAAL,CAAc;AAACV,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAAnC,OAAd;AACH,KA9BuB;AAAA;;AAgCxBW,EAAAA,MAAM,GAAG;AAGL,wBACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKV,YAAL,CAAkB,KAAKH,KAAL,CAAWF,UAA7B,EAAyCgB,GAAzC,CAA6CC,OAAO,iBACjD,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAEA,OAAO,CAACC,EAAnB;AAAuB,MAAA,KAAK,EAAED,OAAO,CAACE,KAAtC;AAA6C,MAAA,OAAO,EAAG,KAAKN,aAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ,CAFJ,CADJ;AAWH;;AA9CuB;;AAgDxB,eAAeZ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\"\nimport Col from \"react-bootstrap/Col\"\nimport Nav from \"./components/Navbar\"\nimport Cards from \"./components/Cards\"\nimport characters from \"./memory-cards.json\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n\n    state = {\n        characters,\n        topScore: 0,\n        currentScore: 0,\n    };\n\n    shuffleArray = arr => {\n\n        var counter = arr.length\n        var random;\n        var temp;\n\n        // While there are elements in the array\n        while (counter > 0) {\n            // Pick a random index\n            random = Math.floor(Math.random() * counter);\n            // Decrease ctr by 1\n            counter--;\n            // And swap the last element with it\n            temp = arr[counter];\n            arr[counter] = arr[random];\n            arr[random] = temp;\n        }\n        return arr;\n    }\n\n    handleOnClick = ()=>{\n        this.setState({currentScore: this.currentScore + 1})\n    }\n\n    render() {\n\n\n        return (\n            <Wrapper className=\"bg-dark\">\n                <Nav />\n                <div className=\"container col-xl-6\" >\n                    <Col >\n                        {this.shuffleArray(this.state.characters).map(persona =>\n                            <Cards id={persona.id} image={persona.image} onClick ={this.handleOnClick()}></Cards>)}\n                    </Col>\n                </div>\n            </Wrapper >\n        )\n    }\n}\n    export default App;"]},"metadata":{},"sourceType":"module"}